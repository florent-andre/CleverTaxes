<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	You under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>eu.ooffee.utilities</groupId>
	<artifactId>jaxb</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>bundle</packaging>

	<name>Ooffee : utilities for jaxb (JSON and xml)</name>
	<description>Provide Jaxb marshaller and unmarshaller</description>

	<!-- <scm> <connection> scm:svn:http://svn.apache.org/repos/asf/incubator/stanbol/trunk/enhancer/jersey/ 
		</connection> <developerConnection> scm:svn:https://svn.apache.org/repos/asf/incubator/stanbol/trunk/enhancer/jersey/ 
		</developerConnection> <url>http://incubator.apache.org/stanbol/</url> </scm> -->

	<build>
	  <!-- make it an OSGi bundle -->
	  <plugins>
	    <plugin>
	      <groupId>org.apache.felix</groupId>
	      <artifactId>maven-scr-plugin</artifactId>
	      <version>1.7.4</version>
	    </plugin>
	    <plugin>
	      <groupId>org.apache.felix</groupId>
	      <artifactId>maven-bundle-plugin</artifactId>
	      <extensions>true</extensions>
	      <configuration>
		<instructions>
			<Export-Package>
              org.eclipse.persistence.jaxb.*
            </Export-Package>
		  <Embed-Dependency>
		    *;scope=compile|runtime;inline=false;artifactId=
		    org.eclipse.persistence.moxy|
		    org.eclipse.persistence.core|
		    javax.persistence|
		    persistence-api|
		    org.eclipse.persistence.asm|
		    org.eclipse.persistence.antlr|
		    org.eclipse.persistence.jpa.jpql
		  </Embed-Dependency>
		  <Embed-Transitive>true</Embed-Transitive>
		  <!-- org.osgi.service.jpa.*, !javax.persistence.*, !org.antlr.stringtemplate.*, 
		       !javax.jms.*, !javax.resource.*, !javax.validation.*, !org.eclipse.persistence.internal.libraries.*, 
		       !org.eclipse.persistence.jpa.jpql.*, -->
		  <Import-Package>
		    !org.antlr.stringtemplate.*,
		    !javax.jms.*,
		    !javax.resource.*,
		    
		    javax.ws.rs.*; version="[0,2)",
							*
		  </Import-Package>
		   
		</instructions>
	      </configuration>
	    </plugin>
<!-- 	    <plugin> -->
<!-- 	      <groupId>org.apache.rat</groupId> -->
<!-- 	      <artifactId>apache-rat-plugin</artifactId> -->
<!-- 	      <configuration> -->
<!-- 		<excludes> -->
<!-- 		  OpenLayers License provided in openlayers-2.9/license.txt -->
<!-- 		  <exclude>src/main/resources/org/apache/stanbol/enhancer/jersey/static/openlayers-2.9/**</exclude> -->
<!-- 		</excludes> -->
<!-- 	      </configuration> -->
<!-- 	    </plugin> -->
	  </plugins>
	</build>
	
	<dependencies>
	  
	  <dependency>
	    <groupId>org.apache.felix</groupId>
	    <artifactId>org.apache.felix.scr.annotations</artifactId>
	    <version>1.6.0</version>
	  </dependency>
	  
<!-- 	  <dependency> -->
<!--             <groupId>javax.ws.rs</groupId> -->
<!--             <artifactId>jsr311-api</artifactId> -->
<!-- 	  </dependency> -->
	  
	  <!-- for json serialization / deserialisation -->
	  <!-- TODO : see if we can remove it -->
<!-- 	  <dependency> -->
<!-- 	    <groupId>org.codehaus.jettison</groupId> -->
<!-- 	    <artifactId>jettison</artifactId> -->
<!-- 	  </dependency> -->
	  
	  <dependency>
	    <groupId>org.eclipse.persistence</groupId>
	    <artifactId>javax.persistence</artifactId>
	    <version>2.0.4.v201112161009</version>
	    <type>jar</type>
	    <scope>compile</scope>
	    <optional>false</optional>
	  </dependency>
	  
	  <dependency>
	    <groupId>org.eclipse.persistence</groupId>
	    <artifactId>org.eclipse.persistence.asm</artifactId>
	    <version>3.3.1.v201206041142</version>
	    <type>jar</type>
	    <scope>compile</scope>
	    <optional>false</optional>
	  </dependency>
	  
	  <dependency>
	    <groupId>org.eclipse.persistence</groupId>
	    <artifactId>org.eclipse.persistence.antlr</artifactId>
	    <version>3.2.0.v201206041011</version>
	    <type>jar</type>
	    <scope>compile</scope>
	    <optional>false</optional>
	  </dependency>
	  
	  <dependency>
	    <groupId>org.eclipse.persistence</groupId>
	    <artifactId>org.eclipse.persistence.jpa.jpql</artifactId>
	    <version>2.4.0</version>
	    <type>jar</type>
	    <scope>compile</scope>
	    <optional>false</optional>
	  </dependency>
	  <dependency>
	    <groupId>org.eclipse.persistence</groupId>
	    <artifactId>org.eclipse.persistence.core</artifactId>
	    <version>2.4.0</version>
	    <type>jar</type>
	    <scope>compile</scope>
	    <optional>false</optional>
	  </dependency>
	  
	  <dependency>
	    <groupId>org.eclipse.persistence</groupId>
	    <artifactId>org.eclipse.persistence.moxy</artifactId>
	    <version>2.4.0</version>
	    <scope>runtime</scope>
	  </dependency>
	  
	  
	  <dependency>
	    <groupId>javax.persistence</groupId>
	    <artifactId>persistence-api</artifactId>
	    <version>1.0.2</version>
	  </dependency>
	  
	  <dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>eclipselink</artifactId>
			<version>2.4.0</version>
		</dependency>

		<dependency>
			<groupId>javax.xml</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.2.7</version>
		</dependency>
	  
	  <dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			        <version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.1</version>
		</dependency>

	  <!-- for tests -->
	  <dependency>
	    <groupId>junit</groupId>
	    <artifactId>junit</artifactId>
	    <version>4.11</version>
	    <scope>test</scope>
	  </dependency>
	</dependencies>
	
	<repositories>
	  <repository>
	    <id>EclipseLink</id>
	    <url>http://download.eclipse.org/rt/eclipselink/maven.repo</url>
	  </repository>
	</repositories>
	
		<profiles>
  <profile>
    <!--
        This profile allows for installing/updating a bundle in a running
        Stanbol instance right after building it. Example: mvn clean install -P
        installBundle -Dsling.url=http://localhost:8080/system/console Or,
        to make it faster without cleaning up or running tests: mvn -o
        install -DskipTests -P installBundle
        -Dsling.url=http://localhost:8080/system/console
       -->
      <id>installBundle</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.sling</groupId>
            <artifactId>maven-sling-plugin</artifactId>
            <version>2.0.6</version>
            <executions>
              <execution>
                <id>install-bundle</id>
                <goals>
                  <goal>install</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
	</profiles>
	
</project>
